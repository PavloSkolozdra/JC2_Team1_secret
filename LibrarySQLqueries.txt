#1.	Get information about all books

SELECT * FROM library.book;

#2.	Check if needed book is available

SELECT CASE WHEN EXISTS(SELECT * FROM book WHERE title = "In Search of Lost Time" AND actual_amount > 0) THEN true ELSE false END;

#3.	Find books by author

SELECT * FROM book WHERE author = "Miguel de Cervantes";

#3.	Find books by co-author

SELECT * FROM book WHERE co_author = "Leopold Bloom";

#4.	Find book by title

SELECT * FROM book WHERE title = "In Search of Lost Time";

#¹5.	Get the most popular

SELECT title, author FROM book WHERE book.id = (SELECT orders.book_id FROM orders WHERE order_date BETWEEN "2017-05-21" AND "2021-01-05" GROUP BY orders.book_id ORDER BY COUNT(orders.book_id) DESC LIMIT 1);

#¹5.	Get the most unpopular

SELECT title, author FROM book WHERE book.id = (SELECT orders.book_id FROM orders WHERE order_date BETWEEN "2017-05-21" AND "2021-01-05" GROUP BY orders.book_id ORDER BY COUNT(orders.book_id) LIMIT 1);

#Reader should be able
#1.	Request needed book
¹ Check if book is available (see query above) if "true" - make new order in "orders" if "false" - return "false";
# So it should be a few separate SQL queries
# Makes new order by `book_id` and sets `order_date` to "current date" and `return_date` to "current date plus one month"

INSERT INTO orders (user_id, book_id, order_date, due_date) VALUES (5, 4, CURDATE(), DATE_ADD(CURDATE(), INTERVAL 30 DAY));

#2.	Return book (by `id`)

UPDATE library.orders SET return_date = '2021-10-10' WHERE (orders.id = 22);

#3.	Get his/her statistics (how many and how long books were been read, reading now)

SELECT  book.title, order_status_id, DATEDIFF(return_date, processed_date) FROM library_v2.order
JOIN book ON (book_id = book.id)
WHERE user_id = 4 AND order_status_id =3;

SELECT  book.title FROM library_v2.order
JOIN book ON (book_id = book.id)
WHERE user_id = 4 AND order_status_id =2;

#4 is the same as "All users should be able." #5



